app.post("/user", urlencodedParser, (request, response) => {
  if (!database.profiles.includes(request.body.username.toLowerCase())) {
    return response.send('üîè **Whoops!** There is no such user with this name! <br><br><button onclick="location.replace(window.location.hostname+`/register`)">Register an account.</button>');
  }
  var bg_image = 'https://convertingcolors.com/plain-2C2F33.svg';
  const canvas = Canvas.createCanvas(700, 250);
       const ctx = canvas.getContext('2d');
       Canvas.loadImage(bg_image).then((background) => {
         ctx.drawImage(background, 0, 0, canvas.width, canvas.height);
           Canvas.loadImage(`${database.user[request.body.username.toLowerCase()].avatar}`).then((pfp) => {
             Canvas.loadImage('https://cdn2.iconfinder.com/data/icons/actions-states-vol-1-colored/48/JD-13-512.png').then((xp) => {
               Canvas.loadImage('https://www.stickpng.com/assets/images/585e4beacb11b227491c3399.png').then((lb) => {
                  Canvas.loadImage('https://cdn.discordapp.com/attachments/660390332772646922/744094457317818388/discordowner.svg').then((owner) => {
                   Canvas.loadImage('https://discordapp.com/assets/ccebe0b729ff7530c5e37dbbd9f9938c.svg').then((rich) => {
                     ctx.drawImage(xp, 225, 130, 50, 50);//xp,225,90,50,50
                     ctx.drawImage(lb, 40, 205, 30, 30);
                     if (request.body.username.toLowerCase()==='orago') {ctx.drawImage(owner, 185, 50, 55, 40)}
                     ctx.font = '40px sans-serif';
                     ctx.fillStyle = '#FFFFFF'
                     ctx.fillText(`${request.body.username.toLowerCase()}`, 240, 90);
                     ctx.font = '25px sans-serif';
                     ctx.fillText(`${database.user[request.body.username.toLowerCase()].coins} ${currency}`, 270, 170);
                     ctx.fillText(`Bio: ${database.user[request.body.username.toLowerCase()].description}`, 77, 229);
                     ctx.strokeStyle = '#74037b';
	                   ctx.strokeRect(0, 0, canvas.width, canvas.height);
	                   ctx.beginPath();
	                   ctx.arc(105, 120, 75, 0, Math.PI * 2, true);
	                   ctx.closePath();
	                   ctx.clip();
                     ctx.drawImage(pfp, 30, 45, 150, 150);
                     response.send('<img src="' + canvas.toDataURL() + '" />');
                   })
                 })
               })
             })
       })
       })
});