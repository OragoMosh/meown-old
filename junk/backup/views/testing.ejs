<!DOCTYPE html>
<html>
<head>
<meta name="viewport" content="width=device-width, initial-scale=1">
<style>
body {font-family: Arial, Helvetica, sans-serif;}
* {box-sizing: border-box;}

/* Button used to open the chat form - fixed at the bottom of the page */
.open-button {
  background-color: #555;
  color: white;
  padding: 16px 20px;
  border: none;
  cursor: pointer;
  opacity: 0.8;
  position: fixed;
  bottom: 23px;
  right: 28px;
  width: 280px;
}

/* The popup chat - hidden by default */
.chat-popup {
  display: none;
  position: fixed;
  bottom: 0;
  right: 15px;
  border: 3px solid #f1f1f1;
  z-index: 9;
}

/* Add styles to the form container */
.form-container {
  max-width: 300px;
  padding: 10px;
  background-color: white;
}

/* Full-width textarea */
.form-container input {
  width: 100%;
  padding: 15px;
  margin: 5px 0 22px 0;
  border: none;
  background: #f1f1f1;
  resize: none;
  min-height: 30px;
}

/* When the textarea gets focus, do something */
.form-container input:focus {
  background-color: #ddd;
  outline: none;
}

/* Set a style for the submit/send button */
.form-container .btn {
  background-color: #4CAF50;
  color: white;
  padding: 16px 20px;
  border: none;
  cursor: pointer;
  width: 100%;
  margin-bottom:10px;
  opacity: 0.8;
}

/* Add a red background color to the cancel button */
.form-container .cancel {
  background-color: red;
}

/* Add some hover effects to buttons */
.form-container .btn:hover, .open-button:hover {
  opacity: 1;
}
</style>
</head>
<body>

<h2>Popup Chat Window</h2>
<p>Click on the button at the bottom of this page to open the chat form.</p>
<p>Note that the button and the form is fixed - they will always be positioned to the bottom of the browser window.</p>

<button class="open-button" onclick="openForm()">Chat</button>

<div class="chat-popup" id="myForm">
  <div class="form-container">
    <h1>Chat</h1>
	<ul id="messages"><li class="message-object">Bot: Chat Session Opened!</li></ul>
    <label for="msg"><b>Message</b></label>
    <input placeholder="Type message.." name="msg" id="input" required>

    <button onclick="add_message('me')" class="btn">Send</button>
    <button type="button" class="btn cancel" onclick="closeForm()">Close</button>
  </div>
</div>
<script src="https://beta.meown.tk/tools/functionpack.js"></script>
<script>
try {
var values = {}
var message = {
"values":{"me":["item-1","item2"],"other":["item","item2"]},
"object": document.getElementsByClassName("message-object"),
"div":document.getElementById("messages"),
"input":document.getElementById("input")
}

function add_message(who,message_value){

const newMessage = document.createElement("li");

if (message.object.length > 5){message.object[0].remove(this)}

if (who==="me"){message_value=message.input.value}else{message_value = message.values.other[message.values.other.length-1]}
message.values[who].push(message_value);
message.input.value="";message.input.focus();
newMessage.setAttribute("class", "message-object");
newMessage.innerText = `${who}: ${message_value}`;
message.div.appendChild(newMessage);
}

function openForm() {
  document.getElementById("myForm").style.display = "block";
  values.opened = "true";
}

function closeForm() {
  document.getElementById("myForm").style.display = "none";
  values.opened = "false";
}

document.addEventListener("keyup", function(event) {
  if (event.code === 'Enter') {
  if (values.opened === "true" && message.input.value.length>0){add_message("me")}else{alert("No!");}
    
  }
});
}//End of Try 
catch (error){alert(error);}
</script>

</body>
</html>








<!DOCTYPE html>
<html>
<link rel="stylesheet" href="https://beta.meown.tk/simple.css">
<body oncontextmenu="return false;">

<h2>JavaScript Arrays</h2>
Time Left:<p id="time">0</p>
Clicks:<p id="clicks">0</p>
<input type="number" id="input_time" placeholder="Time">
<button id="left" onclick="left_click();" class="block simple-right-align" style="background:red;width:80%;text-align:center;">CLICK ME</button>
<script>
var sec,seconds=5,left,right;

  function reset(){
left = 0,right=0,time=5;
var input = document.getElementById("input_time");
if (input.value){time=input.value}
start_timer(time);
}

function start_timer(seconds,element){
 element = document.getElementById("time");
  var timer = setInterval(function() {
    element.innerHTML = seconds;
    seconds--;
    if (seconds<0){result();clearInterval(timer);return element.innerHTML = "STOP!"}
    sec = seconds;
  }, 1000);
  }
  
window.oncontextmenu = function ()
{add_click();return false;}
function result(){
document.getElementById("left").disabled = true;
alert(`Left: ${left}, Right: ${right}`);
}
function left_click(){
if (sec > 0){}else{reset();}
if (!isNaN(left)){left++}else{left = "ERROR"};
document.getElementById("clicks").innerHTML = left;
}

function right_click(){
if (sec > -){}else{reset();}
if (!isNaN(right)){right++}else{right = "ERROR"};
document.getElementById("clicks").innerHTML = right;
}
</script>

</body>
</html>














<!DOCTYPE html>
<html>
<link rel="stylesheet" href="https://beta.meown.tk/simple.css">
<body oncontextmenu="return false;">

<h2>JavaScript Arrays</h2>
Time Left:<p id="time">0</p>
Clicks:<p id="clicks">0</p>
<input type="number" id="input_time" placeholder="Time">
<button id="left" onclick="left_click();" class="block simple-right-align" style="background:red;width:80%; ">CLICK ME</button>
<script>
var seconds=0,left=0,right=0;

  function reset(){
left = 0,right=0,time=5;
var input = document.getElementById("input_time");
if (input.value){time=input.value}
start_timer(time);
}

function start_timer(seconds,element){
 element = document.getElementById("time");
  var timer = setInterval(function() {
    element.innerHTML = seconds;
    seconds--;
    if (seconds<0){result();clearInterval(timer);return element.innerHTML = "STOP!"}
  }, 1000);
  }
  
window.oncontextmenu = function ()
{right_click();return false;}


function left_click(){
if (seconds < 0){reset();}
if (!isNaN(left)){left++}else{left = "ERROR"};
document.getElementById("clicks").innerHTML = left;
}

function right_click(){
if (seconds < 0){reset();}
if (!isNaN(right)){right++}else{right = "ERROR"};
document.getElementById("clicks").innerHTML = right;
}
</script>

</body>
</html>








































eeeeeee
<!DOCTYPE html>
<html>
<body>
Screen:
<p id="demo"></p>
Debug:
<p id="debug"></p>
<script>
var game, map, player, display,debug="Nothing Yet",display = "";


map = [
[0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0],
[0,0,0,1,0,0,0,0,0,0],
[0,1,1,1,1,1,0,0,0,0],
[1,1,1,1,1,1,1,1,1,1]
]
game = {
player:{
symbol:"x"
},
map:map,
air:0
}

function exists_player(){
    var i = 0;
    var found = false;
    while (i <map.length&&found===false) {
    
    if (map[i].includes(game.player.symbol)){
    found=true;
    return {result:true,x:map[i].indexOf(game.player.symbol),y:i};
    }
      i++;
    }
    return {result:false}
}


if(exists_player().result){
game.player.x = exists_player().x;
game.player.y = exists_player().y;
}
else
{
new_player();
}
function fix_map(){
var i1=0,i2=0;
while (i1 <map.length) {//Beginning of while loop
if (map[i1-1]){//beginning of if previous map
if (map[i1-1].length > map[i1]){//Beginning of if previous larger than next
while (i2 <map.length) {//Beginning of i2 while loop

	}//End of i2 while loop
    }//End of if previous larger than next
}//End if previous map
i1++
	}//End of while loop
}


function new_player(){
var i = 0;
while (i <map.length) {
if (map[0][i]===0||map[0][i]==="0"){
map[0][i]=game.player.symbol;found=true;game.player.x = 0;game.player.y = 0;
}//end of if statement.
i++
}// end of while.
setInterval(physics, 500);
}// end of new_player function.

function physics(){
	if (game.player.y.toString()){
    
		if (map[game.player.y+1]){
        if (map[game.player.y+1][game.player.x]===0){
        move_player({x1:game.player.x,y1:game.player.y,x2:game.player.x,y2:game.player.y+1})
        }
		}
	}
}
var body = document.getElementsByTagName("BODY");
body[0].addEventListener("keydown", controller);
        function controller(event) {
			var key = event.keyCode;
             switch (key) {
           case 32://SpaceBar
        		if (map[game.player.y+1][game.player.x]===1){
              move_player({x1:game.player.x,y1:game.player.y,x2:game.player.x,y2:game.player.y-1})
            }
           	  break;
           case 37://Left Key
              if (map[game.player.y][game.player.x-1]!==1&&map[game.player.y][game.player.x-1]!==undefined){
                move_player({x1:game.player.x,y1:game.player.y,x2:game.player.x-1,y2:game.player.y})
            	}
              break;
           case 38://Up Key
        		if (map[game.player.y+1][game.player.x]===1){
              move_player({x1:game.player.x,y1:game.player.y,x2:game.player.x,y2:game.player.y-1})
            }
              break;
           case 39://Right Key
              if (map[game.player.y][game.player.x+1]!==1&&map[game.player.y][game.player.x+1]!==undefined){
                move_player({x1:game.player.x,y1:game.player.y,x2:game.player.x+1,y2:game.player.y})
            	}
              break;
        }
        } 
function move_player(val){
if (typeof val.y1 !== "undefined" && typeof val.y2 !== "undefined"){
map[val.y1][val.x1]=game.air;
map[val.y2][val.x2]=game.player.symbol;
game.player.y=val.y2;
game.player.x=val.x2;
draw();
}
}

setInterval(function(){ draw(); }, 500);
function draw(input){
var i = 0, line = "",i2=0;
    while (i < map.length) {
    	i2 = 0;
    while (i2 < map[i].length) {
    style = "color:white;";
    if (map[i][i2]==="x"){style="color:red;";}
    if (map[i][i2]===1){style="color:black;";}
    line += `<span style="${style}">${map[i][i2]}</span> `
    i2++
    }
display += `${line}<br>`;
line="";
      i++;
    }
    debug=new Date();
document.getElementById("demo").innerHTML = display;
document.getElementById("debug").innerHTML = debug;
display = "";
}

</script>
<style>
#popup {
  visibility: hidden;
  min-width: 250px;
  margin-left: -125px;
  background-color: #333;
  color: #fff;
  text-align: center;
  border-radius: 2px;
  padding: 16px;
  position: fixed;
  z-index: 1;
  left: 50%;
  bottom: 30px;
  font-size: 17px;
}

#popup.show {
  visibility: visible;
  -webkit-animation: fadein_popup 0.5s;
  animation: fadein_popup 0.5s;
}

</style>
<script>
  
let params = (new URL(document.location)).searchParams;
var popup_status = false;
window.addEventListener("load", function () {/*Start - If website Loaded*/
if (document.getElementById("popup")===null){/*Start - If variable popup equals null*/
document.getElementById("assets").innerHTML+= '<div id="popup">\</div>';/*Add popup notification box*/
}
if (params.get('notification')==null){notification('Page Loaded!')}else{notification(params.get('notification'));}
  document.getElementById("popup").style.backgroundColor = "#333"
});
function notification(text,time) {
  if (time==null){
    time = 2000
  }
if (popup_status !== true){
	popup_status = true;
	var popup = document.getElementById("popup");
	popup.className = "show";
	popup.innerHTML = text
	setTimeout(function(){ popup.className = popup.className.replace("show", "");popup_status=false;}, time);
  } 
}
</script>
<div id="assets"></div>
</body>
</html>
